name: tests

on: [ push ]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.x' ]
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      - name: install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: load cached `~/.local`
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: ${{ runner.os }}-python${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-python${{ matrix.python-version }}-
      - name: install dependencies
        run: pip install ".[development]"
      - name: lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  pip:
    needs: lint
    name: test Python
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: [ '3.6', '3.x' ]
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      - name: install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: load cached `~/.local`
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: ${{ runner.os }}-python${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-python${{ matrix.python-version }}-
      - name: install dependencies
        run: pip install ".[testing]"
      - name: install `pipwin` on Windows
        if: contains(matrix.os, 'windows')
        run: pip install pipwin
      - name: run tests
        run: pytest --numprocesses auto
  conda:
    needs: lint
    name: test Anaconda
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      - name: setup Miniconda
        uses: s-weigand/setup-conda@v1
      - name: load cached `~/.local`
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: ${{ runner.os }}-conda${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-conda${{ steps.setup-python.outputs.python-version }}-
      - name: install dependencies
        run: |
          conda install pytest pytest-xdist -y
          pip install .
      - name: run tests
        run: pytest --numprocesses auto

